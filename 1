def func1(arg1, arg2):
    def func2(arg3, arg4):
        var8 = func3(arg1, arg3)
        var16 = var11(arg3, arg2)
        var21 = func8(arg1, arg4)
        var22 = func11()
        var23 = arg4 | var8 ^ 21262867 & arg3
        var24 = arg4 | arg3 + var21 & arg3
        var25 = var16 & (arg1 - -519101029) - var8
        if var16 < var21:
            var26 = var8 - arg1 - var25 + var16
        else:
            var26 = arg3 + ((var21 & var25) + var24)
        var27 = var25 & var24
        var28 = var24 & 15
        if var28 < var28:
            var29 = (var21 + arg1 & arg4) | arg2
        else:
            var29 = ((var23 & var8) ^ arg2) | var24
        var30 = (var24 ^ var22) - var21
        var31 = arg2 + var21
        var32 = arg1 - 1237911745
        var33 = (var27 & var25) - (arg1 - var32)
        var34 = var8 ^ var22
        var35 = arg2 - ((arg3 - arg4) - var32)
        var36 = var27 | ((var24 - var35) + 1211699753)
        result = (-126 + var24 | var8) | var22
        return result
    var37 = func2(arg2, arg1)
    result = var37 | arg1
    return result
def func11():
    func9()
    result = len(xrange(47))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 6
def func8(arg17, arg18):
    var19 = ((arg18 & arg17 - 1317686187 + -961) & (arg18 + (((arg18 + ((1059726708 | (arg17 & (arg18 & -762) & 927 + arg17 - 1921920222)) - 909)) + -1341065250 | 91 + -857938267 & arg18) - 913861055) + 1099201342) + 542) | -538
    var20 = (((441 ^ arg18 ^ (((-1587924374 | -1670196108 + (-195091946 ^ arg18) | arg17) ^ -1332473028 & (-1689647438 | 610)) + arg17)) & var19) ^ (arg17 ^ arg18 ^ ((245735586 | -106575717 & var19 & arg18) ^ arg17) & arg17) | arg17) | arg17
    result = (arg17 - var19) | (513 & ((arg18 & arg17) + (arg18 + -684) + var19 ^ arg18)) | arg17 & var19 & -1050854471
    return result
def func7(arg12, arg13):
    var14 = arg13 & arg12
    var15 = ((var14 & (var14 - (var14 ^ (842 ^ -632 | arg12 | (-794 ^ arg13) ^ -133622247 & var14)) ^ var14)) ^ -1231885153 ^ var14 - ((-1801971841 ^ -445) + arg13 - (1684157763 + arg13 | -526405146) | -237)) + 124
    result = arg12 | (((arg13 & 519 + (var14 & var14 ^ var14) ^ var14 - var15 ^ -53 & var15) + var15) ^ -637)
    return result
def func6():
    closure = [-4]
    def func5(arg9, arg10):
        closure[0] += func7(arg9, arg10)
        return closure[0]
    func = func5
    return func
var11 = func6()
def func3(arg5, arg6):
    def func4(acc, rest):
        var7 = 3 + acc
        if acc == 0:
            return var7
        else:
            result = func4(acc - 1, var7)
            return result
    result = func4(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 38'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
